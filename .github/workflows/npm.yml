name: Build RingRTC Desktop Artifacts
run-name: Build RingRTC Desktop Artifacts (${{ github.ref_name }})

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "When true, don't upload to GCS or publish to npm"
        default: false
        required: false
        type: boolean
      runner_linux:
        description: "Linux runner:"
        default: 'ubuntu-20.04'
        required: true
        type: choice
        options:
          - 'ubuntu-20.04'
          - 'ubuntu-20.04-4-cores'
      runner_windows:
        description: "Windows runner:"
        default: 'windows-latest'
        required: true
        type: choice
        options:
          - 'windows-latest'
          - 'windows-latest-8-cores'
      runner_mac:
        description: "Mac runner:"
        default: 'macos-latest'
        required: true
        type: choice
        options:
          - 'macos-latest'
          - 'macos-latest-xl'

env:
  CARGO_TERM_COLOR: always

jobs:
  build_linux:
    name: Build Linux

    runs-on: ${{ inputs.runner_linux }}

    steps:
    - uses: actions/checkout@v4

    - run: rustup toolchain install $(cat rust-toolchain) --profile minimal --target aarch64-unknown-linux-gnu

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y protobuf-compiler crossbuild-essential-arm64

    - uses: actions/setup-node@v4
      with:
        node-version-file: 'src/node/.nvmrc'

    - run: ./bin/fetch-artifact --platform linux-x64 --release
    - run: ./bin/build-electron --ringrtc-only --release

    - run: ./bin/fetch-artifact --platform linux-arm64 --release -o out-arm
    - run: CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc TARGET_ARCH=arm64 OUTPUT_DIR=out-arm ./bin/build-electron --ringrtc-only --release

    - name: Upload Desktop Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ringrtc-desktop-linux
        path: src/node/build/
        retention-days: 2

    - name: Upload Desktop x64 Debug Info
      if: ${{ !inputs.dry_run }}
      uses: actions/upload-artifact@v3
      with:
        name: ringrtc-desktop-linux-debuginfo
        path: out/release/libringrtc-*-linux-x64-debuginfo.tar.bz2
        retention-days: 120

    - name: Upload Desktop arm64 Debug Info
      if: ${{ !inputs.dry_run }}
      uses: actions/upload-artifact@v3
      with:
        name: ringrtc-desktop-linux-debuginfo
        path: out-arm/release/libringrtc-*-linux-arm64-debuginfo.tar.bz2
        retention-days: 120

    - name: Upload WebRTC Acknowledgments
      uses: actions/upload-artifact@v3
      with:
        name: webrtc-acknowledgments-linux
        path: |
          out/release/LICENSE.md
          out-arm/release/LICENSE.md

  build_windows:
    name: Build Windows

    runs-on: ${{ inputs.runner_windows }}

    steps:
    - uses: actions/checkout@v4

    - run: rustup toolchain install $(cat rust-toolchain) --profile minimal --target aarch64-pc-windows-msvc

    - name: Install protoc
      run: choco install protoc
      shell: cmd

    - uses: actions/setup-node@v4
      with:
        node-version-file: 'src/node/.nvmrc'

    - run: sh ./bin/fetch-artifact --platform windows-x64 --release
    - run: sh ./bin/build-electron --ringrtc-only --release

    - run: sh ./bin/fetch-artifact --platform windows-arm64 --release -o out-arm
    - run: echo "TARGET_ARCH=arm64" >> $env:GITHUB_ENV
    - run: echo "OUTPUT_DIR=out-arm" >> $env:GITHUB_ENV
    - run: sh ./bin/build-electron --ringrtc-only --release

    - name: Upload Desktop Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ringrtc-desktop-windows
        path: src/node/build/
        retention-days: 2

    - name: Upload Desktop x64 Debug Info
      if: ${{ !inputs.dry_run }}
      uses: actions/upload-artifact@v3
      with:
        name: ringrtc-desktop-win32-debuginfo
        path: out/release/libringrtc-*-win32-x64-debuginfo.tar.bz2
        retention-days: 120

    - name: Upload Desktop arm64 Debug Info
      if: ${{ !inputs.dry_run }}
      uses: actions/upload-artifact@v3
      with:
        name: ringrtc-desktop-win32-debuginfo
        path: out-arm/release/libringrtc-*-win32-arm64-debuginfo.tar.bz2
        retention-days: 120

    - name: Upload WebRTC Acknowledgments
      uses: actions/upload-artifact@v3
      with:
        name: webrtc-acknowledgments-windows
        path: |
          out/release/LICENSE.md
          out-arm/release/LICENSE.md

  build_mac:
    name: Build macOS

    runs-on: ${{ inputs.runner_mac }}

    steps:
    - uses: actions/checkout@v4

    - run: brew install protobuf coreutils # for grealpath

    - run: rustup toolchain install $(cat rust-toolchain) --profile minimal --target aarch64-apple-darwin

    - uses: actions/setup-node@v4
      with:
        node-version-file: 'src/node/.nvmrc'

    - run: ./bin/fetch-artifact --platform mac-x64 --release
    - run: ./bin/build-electron --ringrtc-only --release

    - run: ./bin/fetch-artifact --platform mac-arm64 --release -o out-arm
    - run: TARGET_ARCH=arm64 OUTPUT_DIR=out-arm ./bin/build-electron --ringrtc-only --release

    - name: Upload Desktop Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ringrtc-desktop-mac
        path: src/node/build/
        retention-days: 2

    - name: Upload Desktop x64 Debug Info
      if: ${{ !inputs.dry_run }}
      uses: actions/upload-artifact@v3
      with:
        name: ringrtc-desktop-darwin-debuginfo
        path: out/release/libringrtc-*-darwin-x64-debuginfo.tar.bz2
        retention-days: 120

    - name: Upload Desktop arm64 Debug Info
      if: ${{ !inputs.dry_run }}
      uses: actions/upload-artifact@v3
      with:
        name: ringrtc-desktop-darwin-debuginfo
        path: out-arm/release/libringrtc-*-darwin-arm64-debuginfo.tar.bz2
        retention-days: 120

    - name: Upload WebRTC Acknowledgments
      uses: actions/upload-artifact@v3
      with:
        name: webrtc-acknowledgments-mac
        path: |
          out/release/LICENSE.md
          out-arm/release/LICENSE.md


  aggregate_desktop:
    name: Aggregate Desktop

    permissions:
      # Needed to clone the repo
      contents: 'read'
      # Needed for google-github-actions/auth.
      id-token: 'write'

    runs-on: ubuntu-latest

    needs: [build_windows, build_mac, build_linux]

    steps:
      - uses: actions/checkout@v4

      - name: Download Desktop Windows Artifacts
        uses: actions/download-artifact@v3
        with:
          name: ringrtc-desktop-windows
          path: src/node/build/

      - name: Download Desktop macOS Artifacts
        uses: actions/download-artifact@v3
        with:
          name: ringrtc-desktop-mac
          path: src/node/build/

      - name: Download Desktop Linux Artifacts
        uses: actions/download-artifact@v3
        with:
          name: ringrtc-desktop-linux
          path: src/node/build/

      - name: Create Archive
        run: tar czf "ringrtc-desktop-build-v$(jq --raw-output .version package.json).tar.gz" build
        working-directory: src/node/

      - name: Output Artifact Checksum
        id: artifact-checksum
        run: |
          shaAndFilename="$(sha256sum ringrtc-desktop-build-v*.tar.gz | tee -a $GITHUB_STEP_SUMMARY)"
          printf 'sha256=%s\n' "$(echo $shaAndFilename | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT
        working-directory: src/node/

      - uses: actions/setup-node@v4
        with:
          node-version-file: 'src/node/.nvmrc'
          registry-url: 'https://registry.npmjs.org/'

      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/741367068918/locations/global/workloadIdentityPools/github/providers/github-actions'
          service_account: 'github-actions@signal-build-artifacts.iam.gserviceaccount.com'

      - uses: google-github-actions/upload-cloud-storage@v1
        if: ${{ !inputs.dry_run }}
        with:
          path: 'src/node'
          destination: build-artifacts.signal.org/libraries
          glob: 'ringrtc-desktop-build-v*.tar.gz'
          parent: false
          process_gcloudignore: false

      # Put the SHA-256 of the archive into prebuildChecksum in package.json
      - run: sed -i "/prebuildChecksum/ s/\"\"/\"${ARTIFACT_CHECKSUM}\"/" package.json
        # Skip this for dry runs because the install step won't be able to
        # download the prebuild.
        if: ${{ !inputs.dry_run }}
        working-directory: src/node/
        env:
          ARTIFACT_CHECKSUM: ${{ steps.artifact-checksum.outputs.sha256 }}

      # Test download by deleting `build/` and running yarn install and yarn test again.
      - run: rm -rf build/
        # Skip this for dry runs because the install step won't be able to
        # download the prebuild.
        if: ${{ !inputs.dry_run }}
        working-directory: src/node/

      - run: yarn install
        working-directory: src/node/

      - run: yarn build
        working-directory: src/node/

      - run: xvfb-run --auto-servernum yarn test
        working-directory: src/node/

      # Collect RingRTC and WebRTC acknowledgments into one file.
      - name: Download Windows Acknowledgments
        uses: actions/download-artifact@v3
        with:
          name: webrtc-acknowledgments-windows
          path: acknowledgments/webrtc-windows/

      - name: Download macOS Acknowledgments
        uses: actions/download-artifact@v3
        with:
          name: webrtc-acknowledgments-mac
          path: acknowledgments/webrtc-mac/

      - name: Download Linux Acknowledgments
        uses: actions/download-artifact@v3
        with:
          name: webrtc-acknowledgments-linux
          path: acknowledgments/webrtc-linux/

      - run: cp acknowledgments/acknowledgments.md src/node/dist
      - run: bin/convert_webrtc_acknowledgments.py --format md acknowledgments/webrtc-*/*/*/LICENSE.md >> src/node/dist/acknowledgments.md

      # Finally, publish to NPM. Or upload a pack, for a dry run.
      - run: npm publish --access public
        if: ${{ !inputs.dry_run }}
        working-directory: src/node/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - run: yarn pack
        if: ${{ inputs.dry_run }}
        working-directory: src/node/

      - name: Upload Package Archive
        if: ${{ inputs.dry_run }}
        uses: actions/upload-artifact@v3
        with:
          name: npm-package
          path: src/node/signalapp-ringrtc-v*.tgz
          retention-days: 7
